{"version":3,"file":"static/js/760.4995c81a.chunk.js","mappings":"kOAGaA,EAAgBC,EAAAA,GAAAA,GAAH,qSAcbC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,6C,SCfdG,EAAa,CACjB,CAAEC,KAAM,OAAQC,KAAM,QACtB,CAAED,KAAM,SAAUC,KAAM,WAGX,SAASC,IACtB,OACE,SAACP,EAAD,UACGI,EAAWI,KAAI,gBAAGH,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACd,SAACJ,EAAD,CAAoBO,GAAIJ,EAAxB,SACGC,GADWD,EADA,KAOrB,C,oDCdYF,GAAOF,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sBAEJS,EAAUT,EAAAA,GAAAA,IAAH,0CAIPU,EAAMV,EAAAA,GAAAA,IAAH,2CAIHW,EAAaX,EAAAA,GAAAA,IAAH,8DAKVY,EAAQZ,EAAAA,GAAAA,GAAH,+DAKLa,EAAgBb,EAAAA,GAAAA,EAAH,yFAMbc,EAAcd,EAAAA,GAAAA,EAAH,+CAIXe,EAAWf,EAAAA,GAAAA,EAAH,2CAIRgB,EAAShB,EAAAA,GAAAA,EAAH,+CCnBJ,SAASiB,IAAgB,IAAD,IAC/BC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACrCC,EAAaL,EAAbK,SACAC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,GAAwBE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAIRC,EAAAA,EAAAA,IAAa,WAAYR,GACtBS,MAAK,SAAAC,GAAG,OAAIA,EAAIP,IAAR,IACRM,MAAK,SAAAC,GAEJ,IAAMC,EAAYD,EAAIL,OAAOtB,KAAI,SAAA6B,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,MAEnD,OADAR,EAAUK,GACHP,EAAQM,EAChB,GAEJ,GAAE,CAACV,EAASD,KAGX,iCACE,SAACrB,EAAD,CAAMM,GAAIY,EAAV,sBACA,UAACX,EAAD,WACmB,IAAhBkB,EAAKY,SACJ,SAAC7B,EAAD,CACE8B,IACEb,EAAKc,YACD,uDACAd,EAAKc,YACL,4EAENC,IAAKf,EAAKgB,SAGd,UAAChC,EAAD,YACE,UAACC,EAAD,WACGe,EAAKgB,MACLhB,EAAKiB,eACJ,0BAAO,KAAOjB,EAAKiB,aAAaC,MAAM,EAAG,GAAK,UAGlD,UAAC/B,EAAD,0BACegC,OAAOC,SAA6B,GAApBpB,EAAKqB,cADpC,QAGA,SAACnC,EAAD,wBACA,SAACE,EAAD,UAAWY,EAAKsB,YAChB,SAACpC,EAAD,sBACA,SAACG,EAAD,UAASa,WAGb,SAACvB,EAAD,KACA,SAAC,EAAA4C,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,uBCjFD,IAAMC,EAAQC,EAAQ,MAChBC,EAAU,mCAChBF,EAAMG,SAASC,QAAU,gCA0CzB,IAAMC,EAAW,CACfC,IAzCF,SAAaC,EAAOC,GAClB,IAAIC,GAAW,EAMf,OAAQF,GACN,IAAK,IACHE,EAAQ,qCAAiCP,GACzC,MAEF,IAAI,UACFO,EAAQ,+BAA2BP,EAA3B,iCAA2DM,EAA3D,8BAER,MACF,IAAI,WACFC,EAAQ,gBAAYD,EAAZ,oBAAgCN,GAExC,MACF,IAAI,WAAJ,OAAgBM,EAAhB,WACEC,EAAQ,gBAAYD,EAAZ,4BAAwCN,GAChD,MACF,IAAI,WAAJ,OAAgBM,EAAhB,SACEC,EAAQ,gBAAYD,EAAZ,4BAAwCN,GAEhD,MACF,QAEE,YADAQ,QAAQC,IAAI,OAIhB,GAAIF,EACF,OAAOT,EAAMY,IAAN,UAAaH,IAAY5B,MAAK,SAAAgC,GAEnC,OAAOA,CACR,GAEJ,GAMD,K","sources":["components/Cast&ReviewContainer/Cast&ReviewContainer.styler.js","components/Cast&ReviewContainer/Cast&ReviewContainer.jsx","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CastContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: flex-start;\n  min-height: 80px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  padding-left: 15px;\n  border-top: 1px solid #2a363b;\n\n  border-bottom: 1px solid #2a363b;\n`;\n\nexport const NavLink = styled(Link)`\n  margin-left: 5px;\n`;\n","import { CastContainer, NavLink } from './Cast&ReviewContainer.styler';\n\nconst castReview = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'review', text: 'Review' },\n];\n\nexport default function CastReviewContainer() {\n  return (\n    <CastContainer>\n      {castReview.map(({ href, text }) => (\n        <NavLink key={href} to={href}>\n          {text}\n        </NavLink>\n      ))}\n    </CastContainer>\n  );\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)``;\n\nexport const Details = styled.div`\n  display: flex;\n`;\n\nexport const Img = styled.img`\n  display: block;\n`;\n\nexport const Attributes = styled.div`\n  padding: 20px;\n  font-size: 18px;\n`;\n\nexport const Title = styled.h3`\n  color: #000f58;\n  font-size: 30px;\n`;\n\nexport const AttributeName = styled.p`\n  font-size: 22px;\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n\nexport const VoteAverage = styled.p`\n  font-style: italic;\n`;\n\nexport const Overview = styled.p`\n  color: #4b4453;\n`;\n\nexport const Genres = styled.p`\n  font-style: italic;\n`;\n","import CastReviewContainer from 'components/Cast&ReviewContainer';\nimport { useEffect, useState } from 'react';\nimport { useLocation, Outlet, useParams } from 'react-router-dom';\nimport MovieAPI from 'services/API';\nimport { Suspense } from 'react';\n\nimport {\n  Details,\n  Img,\n  Attributes,\n  Title,\n  AttributeName,\n  VoteAverage,\n  Genres,\n  Overview,\n  Link,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const { pathname } = location;\n  const { movieId } = useParams();\n  // console.log(location);\n  // ================================ как решить проблему ???\n  // const [currentPathName, setCurrentPathName] = useState(`/movies/${movieId}`);\n  const [data, setData] = useState({});\n  const [genres, setGenres] = useState('');\n\n  useEffect(() => {\n    // if (currentPathName !== pathname) {\n    //   return;\n    // }\n    MovieAPI.api('/movies/', movieId)\n      .then(res => res.data)\n      .then(res => {\n        // console.log(res);\n        const allGenres = res.genres.map(i => i.name).join(', ');\n        setGenres(allGenres);\n        return setData(res);\n      });\n    // setCurrentPathName(pathname);\n  }, [movieId, pathname]);\n\n  return (\n    <>\n      <Link to={backLinkHref}>go back</Link>\n      <Details>\n        {data.length !== 0 && (\n          <Img\n            src={\n              data.poster_path\n                ? 'https://www.themoviedb.org/t/p/w300_and_h450_bestv2/' +\n                  data.poster_path\n                : 'https://bimmridder.com/wp-content/uploads/2016/09/placeholder-300x400.png'\n            }\n            alt={data.title}\n          />\n        )}\n        <Attributes>\n          <Title>\n            {data.title}\n            {data.release_date && (\n              <span>{' (' + data.release_date.slice(0, 4) + ')'}</span>\n            )}\n          </Title>\n          <VoteAverage>\n            User score: {Number.parseInt(data.vote_average * 10)}%\n          </VoteAverage>\n          <AttributeName>Overview</AttributeName>\n          <Overview>{data.overview}</Overview>\n          <AttributeName>Genres</AttributeName>\n          <Genres>{genres}</Genres>\n        </Attributes>\n      </Details>\n      <CastReviewContainer />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","const axios = require('axios');\nconst API_KEY = 'f3d33ff00cd7667f5ad243a04605493c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nfunction api(param, movie_id) {\n  let pathLink = false;\n\n  //   console.log(typeof param);\n  //   console.log(typeof `/movies/${movie_id}`);\n  //   console.log(param === `/movies/${movie_id}`);\n\n  switch (param) {\n    case '/':\n      pathLink = `trending/movie/day?api_key=${API_KEY}`;\n      break;\n\n    case `/movies`:\n      pathLink = `search/movie?api_key=${API_KEY}&language=en-US&query=${movie_id}&page=1&include_adult=true`;\n\n      break;\n    case `/movies/`:\n      pathLink = `movie/${movie_id}?api_key=${API_KEY}`;\n\n      break;\n    case `/movies/${movie_id}/review`:\n      pathLink = `movie/${movie_id}/reviews?api_key=${API_KEY}`;\n      break;\n    case `/movies/${movie_id}/cast`:\n      pathLink = `movie/${movie_id}/credits?api_key=${API_KEY}`;\n\n      break;\n    default:\n      console.log('NOT');\n      return;\n  }\n\n  if (pathLink) {\n    return axios.get(`${pathLink}`).then(response => {\n      //   console.log(response);\n      return response;\n    });\n  }\n}\n\nconst FetchAPI = {\n  api,\n};\n\nexport default FetchAPI;\n"],"names":["CastContainer","styled","NavLink","Link","castReview","href","text","CastReviewContainer","map","to","Details","Img","Attributes","Title","AttributeName","VoteAverage","Overview","Genres","MovieDetails","location","useLocation","backLinkHref","state","from","pathname","movieId","useParams","useState","data","setData","genres","setGenres","useEffect","MovieAPI","then","res","allGenres","i","name","join","length","src","poster_path","alt","title","release_date","slice","Number","parseInt","vote_average","overview","Suspense","fallback","axios","require","API_KEY","defaults","baseURL","FetchAPI","api","param","movie_id","pathLink","console","log","get","response"],"sourceRoot":""}